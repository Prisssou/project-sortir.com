security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        user_provider :
            entity:
                class: App\Entity\User
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            pattern: ^/
            provider: user_provider
            anonymous: ~
            form_login:
                login_path: login
                check_path: login
                # en méthode POST, envoi des input _username et _password à check_path qui va permettre la connexion
            logout_on_user_change: true
            logout:
                path: logout
                target: login
            # https://symfony.com/doc/current/security/impersonating_user.html
            switch_user: true

            # Remember me
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 172800 # 2 days in seconds
                path: /
                always_remember_me: true

    encoders:
        App\Entity\User:
            algorithm: argon2i # méthode de chiffrement du mdp / autre : bcrypt



            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication



    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH] # SWITCH permet de prendre le role d'un autre user

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/login, roles: ROLE_USER} # Pour accéder à série, il faut le ROLE_USER -> cf getRoles de User.php
        - { path: ^/profile, roles: ROLE_USER }
        - { path: ^/admin, roles: ROLE_ADMIN }
